{"uid":"d23b2f5915f436f5","name":"test_11_alternative_delivery_address","fullName":"TestCases.test_Base_1.LoginTest#test_11_alternative_delivery_address","historyId":"f6f3682ec6871a1db1a65cae9ddc3584","time":{"start":1686132539224,"stop":1686132552847,"duration":13623},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-dus-c215=\"\" aria-haspopup=\"true\" class=\"mat-menu-trigger d-flex align-items-center\">...</a> is not clickable at point (1780, 28). Other element would receive the click: <div _ngcontent-dus-c220=\"\" class=\"load\">...</div>\n  (Session info: MicrosoftEdge=114.0.1823.37)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF764E0B5A2+64226]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764D9BB62+770994]\n\t(No symbol) [0x00007FF764B5CC3C]\n\t(No symbol) [0x00007FF764BA82AA]\n\t(No symbol) [0x00007FF764BA5A33]\n\t(No symbol) [0x00007FF764BA3689]\n\t(No symbol) [0x00007FF764BA26E5]\n\t(No symbol) [0x00007FF764B9531C]\n\t(No symbol) [0x00007FF764BBEFEA]\n\t(No symbol) [0x00007FF764B94BA1]\n\t(No symbol) [0x00007FF764B94A71]\n\t(No symbol) [0x00007FF764BBF320]\n\t(No symbol) [0x00007FF764B94BA1]\n\t(No symbol) [0x00007FF764BD7FB1]\n\t(No symbol) [0x00007FF764BBEDC3]\n\t(No symbol) [0x00007FF764B93BDC]\n\t(No symbol) [0x00007FF764B92DC6]\n\t(No symbol) [0x00007FF764B94354]\n\tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF764FE8E49+1319081]\n\t(No symbol) [0x00007FF764C0BEE8]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764CE7AC1+33553]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764CDFEFF+1871]\n\tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF764FE7A63+1313987]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF764DA4198+20232]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF764DA07B4+5412]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF764DA08AC+5660]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764D94561+740785]\n\tBaseThreadInitThunk [0x00007FF965347614+20]\n\tRtlUserThreadStart [0x00007FF9662626A1+33]","statusTrace":"cls = <class 'TestCases.test_Base_1.LoginTest'>\n\n    @classmethod\n    def tearDownClass(cls) -> None:\n    # def test_log_out(self):\n        driver = cls.driver\n>       LogOut(driver).logout()\n\nTestCases\\test_Base_1.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nLoginOut_Pages\\logout.py:9: in logout\n    self.driver.find_element(By.XPATH, Login_out_Locators.profile_dropdown_id).click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:403: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DB01C475D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...D94561+740785]\\\\n\\\\tBaseThreadInitThunk [0x00007FF965347614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF9662626A1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-dus-c215=\"\" aria-haspopup=\"true\" class=\"mat-menu-trigger d-flex align-items-center\">...</a> is not clickable at point (1780, 28). Other element would receive the click: <div _ngcontent-dus-c220=\"\" class=\"load\">...</div>\nE         (Session info: MicrosoftEdge=114.0.1823.37)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF764E0B5A2+64226]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764D9BB62+770994]\nE       \t(No symbol) [0x00007FF764B5CC3C]\nE       \t(No symbol) [0x00007FF764BA82AA]\nE       \t(No symbol) [0x00007FF764BA5A33]\nE       \t(No symbol) [0x00007FF764BA3689]\nE       \t(No symbol) [0x00007FF764BA26E5]\nE       \t(No symbol) [0x00007FF764B9531C]\nE       \t(No symbol) [0x00007FF764BBEFEA]\nE       \t(No symbol) [0x00007FF764B94BA1]\nE       \t(No symbol) [0x00007FF764B94A71]\nE       \t(No symbol) [0x00007FF764BBF320]\nE       \t(No symbol) [0x00007FF764B94BA1]\nE       \t(No symbol) [0x00007FF764BD7FB1]\nE       \t(No symbol) [0x00007FF764BBEDC3]\nE       \t(No symbol) [0x00007FF764B93BDC]\nE       \t(No symbol) [0x00007FF764B92DC6]\nE       \t(No symbol) [0x00007FF764B94354]\nE       \tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF764FE8E49+1319081]\nE       \t(No symbol) [0x00007FF764C0BEE8]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764CE7AC1+33553]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764CDFEFF+1871]\nE       \tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF764FE7A63+1313987]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF764DA4198+20232]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF764DA07B4+5412]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF764DA08AC+5660]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764D94561+740785]\nE       \tBaseThreadInitThunk [0x00007FF965347614+20]\nE       \tRtlUserThreadStart [0x00007FF9662626A1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_LoginTest","time":{"start":1686132299206,"stop":1686132301601,"duration":2395},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"afterStages":[{"name":"_unittest_setUpClass_fixture_LoginTest::0","time":{"start":1686132552848,"stop":1686132554372,"duration":1524},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-dus-c215=\"\" aria-haspopup=\"true\" class=\"mat-menu-trigger d-flex align-items-center\">...</a> is not clickable at point (1780, 28). Other element would receive the click: <div _ngcontent-dus-c220=\"\" class=\"load\">...</div>\n  (Session info: MicrosoftEdge=114.0.1823.37)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF764E0B5A2+64226]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764D9BB62+770994]\n\t(No symbol) [0x00007FF764B5CC3C]\n\t(No symbol) [0x00007FF764BA82AA]\n\t(No symbol) [0x00007FF764BA5A33]\n\t(No symbol) [0x00007FF764BA3689]\n\t(No symbol) [0x00007FF764BA26E5]\n\t(No symbol) [0x00007FF764B9531C]\n\t(No symbol) [0x00007FF764BBEFEA]\n\t(No symbol) [0x00007FF764B94BA1]\n\t(No symbol) [0x00007FF764B94A71]\n\t(No symbol) [0x00007FF764BBF320]\n\t(No symbol) [0x00007FF764B94BA1]\n\t(No symbol) [0x00007FF764BD7FB1]\n\t(No symbol) [0x00007FF764BBEDC3]\n\t(No symbol) [0x00007FF764B93BDC]\n\t(No symbol) [0x00007FF764B92DC6]\n\t(No symbol) [0x00007FF764B94354]\n\tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF764FE8E49+1319081]\n\t(No symbol) [0x00007FF764C0BEE8]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764CE7AC1+33553]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764CDFEFF+1871]\n\tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF764FE7A63+1313987]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF764DA4198+20232]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF764DA07B4+5412]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF764DA08AC+5660]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF764D94561+740785]\n\tBaseThreadInitThunk [0x00007FF965347614+20]\n\tRtlUserThreadStart [0x00007FF9662626A1+33]\n\n","statusTrace":"  File \"F:\\Sivakumar\\Pytest Automation\\PycharmProjects\\POMFramework\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"F:\\Sivakumar\\Pytest Automation\\PycharmProjects\\POMFramework\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 918, in _teardown_yield_fixture\n    next(it)\n  File \"F:\\Sivakumar\\Pytest Automation\\PycharmProjects\\POMFramework\\venv\\Lib\\site-packages\\_pytest\\unittest.py\", line 173, in fixture\n    teardown()\n  File \"F:\\Sivakumar\\Pytest Automation\\PycharmProjects\\POMFramework\\TestCases\\test_Base_1.py\", line 87, in tearDownClass\n    LogOut(driver).logout()\n  File \"F:\\Sivakumar\\Pytest Automation\\PycharmProjects\\POMFramework\\LoginOut_Pages\\logout.py\", line 9, in logout\n    self.driver.find_element(By.XPATH, Login_out_Locators.profile_dropdown_id).click()\n  File \"F:\\Sivakumar\\Pytest Automation\\PycharmProjects\\POMFramework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"F:\\Sivakumar\\Pytest Automation\\PycharmProjects\\POMFramework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"F:\\Sivakumar\\Pytest Automation\\PycharmProjects\\POMFramework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"F:\\Sivakumar\\Pytest Automation\\PycharmProjects\\POMFramework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"TestCases"},{"name":"suite","value":"test_Base_1"},{"name":"subSuite","value":"LoginTest"},{"name":"host","value":"SIVAKUMAR"},{"name":"thread","value":"6312-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCases.test_Base_1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"d23b2f5915f436f5.json","parameterValues":[]}